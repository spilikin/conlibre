package de.gematik.ws.conn.cardservice.wsdl.v8_1;

import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.3.6
 * 2020-05-02T19:08:10.042+02:00
 * Generated source version: 3.3.6
 *
 */
@WebServiceClient(name = "CardService",
                  wsdlLocation = "classpath:META-INF/wsdl/api-telematik/conn/CardService.wsdl",
                  targetNamespace = "http://ws.gematik.de/conn/CardService/WSDL/v8.1")
public class CardService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://ws.gematik.de/conn/CardService/WSDL/v8.1", "CardService");
    public final static QName CardServicePort = new QName("http://ws.gematik.de/conn/CardService/WSDL/v8.1", "CardServicePort");
    static {
        URL url = CardService.class.getClassLoader().getResource("META-INF/wsdl/api-telematik/conn/CardService.wsdl");
        if (url == null) {
            java.util.logging.Logger.getLogger(CardService.class.getName())
                .log(java.util.logging.Level.INFO,
                     "Can not initialize the default wsdl from {0}", "classpath:META-INF/wsdl/api-telematik/conn/CardService.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public CardService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public CardService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public CardService() {
        super(WSDL_LOCATION, SERVICE);
    }

    public CardService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public CardService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public CardService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }




    /**
     *
     * @return
     *     returns CardServicePortType
     */
    @WebEndpoint(name = "CardServicePort")
    public CardServicePortType getCardServicePort() {
        return super.getPort(CardServicePort, CardServicePortType.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns CardServicePortType
     */
    @WebEndpoint(name = "CardServicePort")
    public CardServicePortType getCardServicePort(WebServiceFeature... features) {
        return super.getPort(CardServicePort, CardServicePortType.class, features);
    }

}
